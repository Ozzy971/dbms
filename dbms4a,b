BORROWER AND FINE:

SQL> SET SERVEROUT ON
SQL> SET VERIFY OFF
SQL> CREATE TABLE BORROWERS(ROLL_NO NUMBER, NAME VARCHAR(20), DATEOFISSUE DATE, NAME_OF_BOOK VARCHAR(20), STATUS VARCHAR(10));

SQL> CREATE TABLE FINES (ROLL_NO NUMBER, DATEOFRETURN DATE, AMOUNT NUMBER);

SQL> INSERT INTO BORROWERS VALUES(101, 'SEOKJIN', TO_DATE('4-11-2024','DD-MM-YYYY'), 'HARRY POTTER', 'PENDING');

SQL> INSERT INTO BORROWERS VALUES(102, 'NAMJOON', TO_DATE('12-09-2024','DD-MM-YYYY'), 'ABC', 'PENDING');


SQL> DECLARE
  2  I_ROLL_NO NUMBER;
  3  NAME_OF_BOOK VARCHAR2(25);
  4  NO_OF_DAYS NUMBER;
  5  RETURN_DATE DATE:=TO_DATE(SYSDATE,'DD-MM-YYYY');
  6  TEMP NUMBER;
  7  DOI DATE;
  8  FINES NUMBER;
  9  BEGIN
 10  I_ROLL_NO := &I_ROLL_NO;
 11  NAME_OF_BOOK := '&NAME_OF_BOOK';
 12  --DBMS_OUTPUT.PUT_LINE(RETURN_DATE);
 13  SELECT TO_DATE(BORROWERS.DATEOFISSUE,'DD-MM-YYYY') INTO DOI FROM BORROWERS WHERE BORROWERS.ROLL_NO = I_ROLL_NO AND BORROWERS.NAME_OF_BOOK = NAME_OF_BOOK;
 14  NO_OF_DAYS := RETURN_DATE-DOI;
 15  DBMS_OUTPUT.PUT_LINE(NO_OF_DAYS);
 16  IF(NO_OF_DAYS>15 AND NO_OF_DAYS<=30) THEN
 17  FINES:=5*NO_OF_DAYS;
 18s
 19  ELSIF(NO_OF_DAYS>30)THEN
 20  TEMP := NO_OF_DAYS-30;
 21  FINES := 150 + TEMP*50;
 22  END IF;
 23  DBMS_OUTPUT.PUT_LINE(FINES);
 24  INSERT INTO FINES VALUES(I_ROLL_NO, RETURN_DATE, FINES);
 25  UPDATE BORROWERS SET STATUS = 'RETURNED' WHERE BORROWERS.ROLL_NO = I_ROLL_NO;
 26
 27  END;
 28  /

SQL> SELECT * FROM BORROWERS;
SQL> SELECT * FROM FINES;




RADIUS OF CIRCLE

SQL> SET SERVEROUT ON
SQL> CREATE TABLE ASSIGNMENT_4B(RADIUS NUMBER, AREA NUMBER);
SQL> DECLARE
  2  RADIUS NUMBER;
  3  AREA NUMBER;
  4  PI NUMBER:=3.14;
  5  BEGIN
  6  FOR RADIUS IN 5..9  LOOP
  7  AREA := PI*RADIUS_VAR*RADIUS;
  8  DBMS_OUTPUT.PUT_LINE(AREA);
  9  INSERT INTO ASSIGNMENT_4B VALUES(RADIUS,AREA);
 10  END LOOP;
 11  END;
 12  /

SQL> SELECT * FROM ASSIGNMENT;
