BORROWER AND FINE:

SQL> SET SERVEROUT ON
SQL> SET VERIFY OFF
SQL> DROP TABLE BORROWER;


SQL> DROP TABLE FINE;


SQL> CREATE TABLE  borrower(roll_no NUMBER , name VARCHAR2(10), dateofissue DATE,name_of_book VARCHAR2(20), status VARCHAR2(10));


SQL> CREATE TABLE fine(roll_no NUMBER,date_of_return DATE,amt NUMBER);


SQL> INSERT INTO borrower VALUES(45,'ASHUTOSH',TO_DATE('01-08-2022','DD-MM-YYYY'),'HARRY POTTER','PENDING');


SQL> INSERT INTO borrower VALUES(46,'ARYAN',TO_DATE('15-08-2022','DD-MM-YYYY'),'DARK MATTER','PENDING');


SQL> INSERT INTO borrower VALUES(47,'ROHAN',TO_DATE('24-08-2022','DD-MM-YYYY'),'SILENT HILL','PENDING');


SQL> INSERT INTO borrower VALUES(48,'SANKET',TO_DATE('26-08-2022','DD-MM-YYYY'),'GOD OF WAR','PENDING');


SQL> INSERT INTO borrower VALUES(49,'SARTHAK',TO_DATE('09-09-2022','DD-MM-YYYY'),'SPIDER-MAN','PENDING');


SQL> DECLARE
  2  i_roll_no NUMBER;
  3  name_of_book VARCHAR2(25);
  4  no_of_days NUMBER;
  5  return_date DATE := TO_DATE(SYSDATE,'DD-MM-YYYY');
  6  temp NUMBER;
  7  doi DATE;
  8  fine NUMBER;
  9  BEGIN
 10  i_roll_no := &i_roll_no;
 11  name_of_book := '&nameofbook';
 12  --dbms_output.put_line(return_date);
 13  SELECT to_date(borrower.dateofissue,'DD-MM-YYYY') INTO doi FROM borrower WHERE borrower.roll_no = i_roll_no AND borrower.name_of_book = name_of_book;
 14  no_of_days := return_date-doi;
 15  dbms_output.put_line(no_of_days);
 16  IF (no_of_days >15 AND no_of_days <=30) THEN
 17  fine := 5*no_of_days;
 18
 19  ELSIF (no_of_days>30 ) THEN
 20  temp := no_of_days-30;
 21  fine := 150 + temp*50;
 22  END IF;
 23  dbms_output.put_line(fine);
 24  INSERT INTO fine VALUES(i_roll_no,return_date,fine);
 25  UPDATE borrower SET status = 'RETURNED' WHERE borrower.roll_no = i_roll_no;
 26
 27
 28  END;
 29  /


SQL> SELECT * FROM BORROWER;

SQL> SELECT * FROM FINE;





RADIUS OF CIRCLE

SQL> SET SERVEROUT ON
SQL> CREATE TABLE ASSIGNMENT_4B(RADIUS NUMBER, AREA NUMBER);
SQL> DECLARE
  2  RADIUS NUMBER;
  3  AREA NUMBER;
  4  PI NUMBER:=3.14;
  5  BEGIN
  6  FOR RADIUS IN 5..9  LOOP
  7  AREA := PI*RADIUS_VAR*RADIUS;
  8  DBMS_OUTPUT.PUT_LINE(AREA);
  9  INSERT INTO ASSIGNMENT_4B VALUES(RADIUS,AREA);
 10  END LOOP;
 11  END;
 12  /

SQL> SELECT * FROM ASSIGNMENT;
